"""
Django settings for TestManagement project.

Generated by 'django-admin startproject' using Django 1.8.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '3ius@4oa50g^0gbm-b1@lb_)i$si!7_7x7z5%3bsu6d&u@ksb8'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition
INSTALLED_APPS = (
    'svc_admin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'svc',
    'testgroup',
    'django_gevent_deploy',
)

#Third party app settings
GEVENT_ADDR_PORT = ':8000'    #default:bind_ip-'', port-8000
BOOTSTRAP_ADMIN_SIDEBAR_MENU = True
JENKINS_INFO = {
    'baseurl': "http://172.16.16.73:8080",
    'username': 'svcadmin',
    'password': '123456'
}

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'TestManagement.urls'
LOGIN_URL = '/admin/login'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'web', 'html')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.debug',
                'django.template.context_processors.i18n',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
                'django.template.context_processors.tz',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.request'
            ],
        },
    },
]

WSGI_APPLICATION = 'TestManagement.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default':{
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'test' if DEBUG else 'svc_load',
        'HOST': '172.16.16.72',
        'USER': 'svcload',
        'PASSWORD': '51talk',
        'PORT': 3306,
        'CHARSET': 'utf8',
        'ATOMIC_REQUESTS': True,
        'OPTIONS': {
            'sql_mode': 'STRICT_TRANS_TABLES',
            'isolation_level': 'read committed'
        }
    },
    'svc_load':{
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'test' if DEBUG else 'svc_load',
        'HOST': '172.16.16.72',
        'USER': 'svcload',
        'PASSWORD': '51talk',
        'PORT': 3306,
        'CHARSET': 'utf8',
        'ATOMIC_REQUESTS': True,
        'OPTIONS': {
            'sql_mode': 'STRICT_TRANS_TABLES',
            'isolation_level': 'read committed'
        }
    }
}

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        # 'LOCATION': 'unique-snowflake',
        'TIMEOUT': 300, #None means no timeout
        'OPTIONS': {
            'MAX_ENTRIES': 300
        }
    }
}


SERVER_EMAIL = 'super_tester@163.com'
ADMINS = [('yinzhixin', 'yinzhixin@51talk.com')]
EMAIL_HOST = 'smtp.163.com'
EMAIL_USE_SSL = False
EMAIL_USE_TLS = False
EMAIL_HOST_USER = SERVER_EMAIL
EMAIL_HOST_PASSWORD = 'xin163'

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Chongqing'

USE_I18N = True

USE_L10N = True

# USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = 'web/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'svc_admin', "static"),
]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'root': {
        'class': 'logging.handlers.RotatingFileHandler',
        'level': 'DEBUG',
        'format': '%(asctime)s %(levelname)s %(message)s'
    },
    'formatters': {
        'verbose': {
            'format': '%(asctime)s %(levelname)s %(module)s-%(lineno)d %(message)s'
        },
        'standard': {
            'format': '%(asctime)s %(levelname)s %(message)s'
        }
    },
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'handlers': {
        'svc_web': {
            'level': 'ERROR',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_DIR, 'log', 'svc_web.log'),
            'formatter': 'verbose',
            'maxBytes': 500*1024*1024,
            'backupCount': 5
        },
        'italk_runner_file': {
            'level': 'ERROR',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_DIR, 'log', 'italk_runner.log'),
            'formatter': 'verbose',
            'maxBytes': 500*1024*1024,
            'backupCount': 5
        },
        'data_runner_file': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_DIR, 'log', 'data_runner.log'),
            'formatter': 'standard',
            'maxBytes': 500*1024*1024,
            'backupCount': 5
        },
        'locust_file': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_DIR, 'log', 'locust_master.log'),
            'formatter': 'standard',
            'maxBytes': 500*1024*1024,
            'backupCount': 5
        },
        #external usage
        'mail_handler': {
            'level': 'ERROR',
            'class': 'logging.handlers.SMTPHandler',
            'formatter': 'verbose',
            'mailhost': 'smtp.163.com',
            'fromaddr':'super_tester@163.com',
            'toaddrs': ['yinzhixin@51talk.com'],
            'subject': 'DataRunner Error',
            'secure': (),
            'credentials': ('super_tester@163.com', 'xin163')
        },
        #django internal usage
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'formatter': 'verbose'
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'standard'
        },
    },
    'loggers': {
        'svc_web': {
            'handlers': ['svc_web'],
            'propagate': False
        },
        'data_runner': {
            'handlers': ['console', 'data_runner_file'],
        },
        'data_runner.master': {
            'handlers': ['data_runner_file'],
            'propagate': False
        },
        'data_runner.slave': {
            'handlers': ['mail_handler'],
            'propagate': False
        },
        'italk_runner': {
            'handlers': ['italk_runner_file'],
            'propagate': False
        },
        'locust': {
            'handlers': ['locust_file'],
            'propagate': False
        },
        'console': {
            'handlers': ['console'],
            'propagate': False
        }
    }
}
