<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<!-- namespace命名空间，作用就是对sql进行分类化管理，理解sql隔离   注意：使用mapper代理方法开发，namespace有特殊重要的作用  -->  
<mapper namespace="com.vdcoding.batman.mapper.GoodsMapper">
	<!-- 设置刷新缓存时间为30s -->
	<cache flushInterval="30000"/>
	<resultMap id="goodsResult" type="Goods">
		<id property="id" column="id"></id>
		<collection property="images" column="id" ofType="GoodsImage" select="selectGoodsImages">
			<id property="id" column="id"></id>
		</collection>
		<collection property="goodsDetails" column="id" ofType="GoodsDetail" select="selectGoodsDetails">
			<id property="id" column="id"></id>
		</collection>
	</resultMap>
	<select id="selectGoodsImages" resultType="GoodsImage">
		SELECT * FROM goods_images
		<where>
			<if test="value != null">
				goodsId=#{goodsId}
			</if>
		</where>
	</select>
	<select id="selectGoodsDetails" resultType="GoodsDetail">
		SELECT * FROM goods_detail
		<where>
			<if test="value != null">
				goodsId=#{goodsId}
			</if>
		</where>
	</select>
	
	<select id="getGoodsById" resultMap="goodsResult">
		SELECT * FROM goods WHERE id=#{goodsId}
	</select>
    <select id="getGoods" resultMap="goodsResult">  
        SELECT * FROM goods WHERE
        <choose>
        	<when test="content!=null">
        		name LIKE CONCAT('%',#{content},'%')
        	</when>
        	<otherwise>
        		categoryId=#{categoryId}
        	</otherwise>
        </choose>
         ORDER BY salesVolume DESC LIMIT #{from},#{limit}
    </select>
    <!-- <update id="updateUser" parameterType="User">
    	UPDATE user SET username=#{username},sex=#{sex},address=#{address} WHERE id=#{id}
    </update>
    <insert id="addUser" parameterType="map">
    	INSERT INTO user (username, sex, address) VALUES(#{username},#{sex},#{address})
    </insert> -->
</mapper>  
